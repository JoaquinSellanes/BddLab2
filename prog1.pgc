#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <stdbool.h>
#include <ctype.h>

EXEC SQL BEGIN DECLARE SECTION;
short int articulo_id;
char articulo_desc[100];
char matricula[8];
int id_venta_enterada, valor_entrada, valor1;
bool valido;

EXEC SQL END DECLARE SECTION;

EXEC SQL WHENEVER SQLERROR SQLPRINT;
EXEC SQL WHENEVER SQLWARNING SQLPRINT;
EXEC SQL WHENEVER NOT FOUND SQLPRINT;

void clearS(){
  system("cls||clear");
}

int intValido(){
  int valor1;
  bool valido = false;
  do {
  if (scanf("%d", &valor1) == 1) {
      valido = true;
  } else {
    clearS();
    printf("\nDebe ingresar un número entero válido. Inténtelo nuevamente.");
    printf("\n----------------------------------------------------------");
    printf("\n\n\t--> ");
    while (getchar() != '\n');
  }
  } while (!valido);
  return valor1;
}
int ventaEntrada(){
    clearS();
    printf("\nHa accedido al registro de una nueva entrada");
    printf("\n----------------------------------------------------------");
    int opcion;
    do {
        printf("\n\nEl visitante es menor de edad?");
        printf("\n\t1 - SI");
        printf("\n\t2 - NO\n\n\t--> ");
        opcion = intValido();
        if (opcion != 1 && opcion != 2) {
            printf("\n\nOpción inválida. Por favor, intente nuevamente, Enter para continuar...");
            getchar();
            getchar();
            clearS();
        }
    } while (opcion != 1 && opcion != 2);
    if (opcion == 1)
    {
        int id_venta_enterada;
        EXEC SQL CONNECT TO lab02@localhost:5432 USER postgres;
        EXEC SQL INSERT INTO venta DEFAULT VALUES;
        EXEC SQL SELECT MAX(id) INTO :id_venta_enterada FROM venta;
        EXEC SQL INSERT INTO ventaentrada (idventa, esmenor) VALUES (:id_venta_enterada, true);
        EXEC SQL COMMIT;
        EXEC SQL DISCONNECT ALL;
        printf("\n\nEntrada registrada correctamente.");
        printf("\n----------------------------------------------------------");
        printf("\nPresiona para continuar...\n\n");
        getchar();
        getchar();
        clearS();
    }
    if (opcion == 2)
    {
        int id_venta_enterada, valor_entrada;
        printf("\nIngrese el valor de la entrada: ");
        valor_entrada = intValido();
        EXEC SQL CONNECT TO lab02@localhost:5432 USER postgres;
        EXEC SQL INSERT INTO venta(valor) VALUES (:valor_entrada);
        EXEC SQL SELECT MAX(id) INTO :id_venta_enterada FROM venta;
        EXEC SQL INSERT INTO ventaentrada (idventa, esmenor) VALUES (:id_venta_enterada, false);
        EXEC SQL COMMIT;
        EXEC SQL DISCONNECT ALL;
        printf("\n\nEntrada registrada correctamente.");
        printf("\n----------------------------------------------------------");
        printf("\nPresiona para continuar...\n\n");
        getchar();
        getchar();
        clearS();
    }
    return 0;
}

int main(){
  if (sqlca.sqlcode != 0){
    printf("TIPO DE ERROR: %d\n", sqlca.sqlcode);
    printf("MENSAJE:%s\n", sqlca.sqlerrm.sqlerrmc);
  }

  ventaEntrada();

  return 0;
}